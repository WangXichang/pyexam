[model_in]
name = zhejiang

[model_new]
# model name
name = model(40-120)-similar-shandong
# model type, in ['plt', 'ppt', 'pgt']
type = plt
# section for out score, point-pair tuple separated by comma
section = (120, 111), (110, 101), (100, 91), (90, 81), (80, 71), (70, 61), (60, 51), (50, 41)
# ratio for each section, sum=100
ratio = 3, 8, 16, 24, 24, 16, 8, 1
# description for model
desc = new model for test, similar to Shandong


[data]
df = df             # file name, used to read to DataFrame
cols = km1, km2     # score fields to transform score


[strategy]
mode_ratio_prox = upper_min         # ('upper_min', 'lower_max', 'near_max', 'near_min')
mode_ratio_cumu = no                # ('yes', 'no')
mode_sort_order = d                 # ('d', 'a')
mode_section_point_first = real     # ('real', 'defined')
mode_section_point_start = step     # ('step', 'share')
mode_section_point_last = real      # ('real', 'defined')
mode_section_degraded = to_max      # ('to_max', 'to_min', 'to_mean')
mode_section_lost = real            # ('real', 'zip')


[para]
logname =                           # used to add in logfile name: model_name_logname_year_month_day.log
logdisp = 1                         # output message to consol or not
logfile = 1                         # output message to log file or not
verify = 0                          # use dual algorithm to verify result or not
raw_score_min = 0                   # min score for raw score
raw_score_max = 100                 # max score for raw score
out_score_decimals = 0              # decimal digits for out score
tiny_value = 0.000000000001         # smallest value for precision in calculation process
